{"version":3,"sources":["webpack:///./src/components/Project.js","webpack:///./src/components/Projects.js","webpack:///./src/components/Hero.js","webpack:///./src/constants/services.js","webpack:///./src/components/Services.js","webpack:///./src/components/Jobs.js","webpack:///./src/pages/index.js","webpack:///./src/components/Blog.js","webpack:///./src/components/Blogs.js"],"names":["Project","description","title","github","stack","url","image","index","className","fluid","childImageSharp","map","item","key","id","href","Projects","projects","showLink","Title","project","idx","to","Hero","file","icon","text","Services","services","service","Jobs","jobs","allStrapiJobs","nodes","useState","value","setValue","company","position","date","desc","strapiId","onClick","name","query","data","allStrapiProjects","blogs","allStrapiBlogs","Layout","Blogs","Blog","category","slug","blog"],"mappings":"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","file":"component---src-pages-index-js-506bd3d4f597709ebf9c.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Image from \"gatsby-image\"\nimport { FaGithubSquare, FaShareSquare } from \"react-icons/fa\"\nconst Project = ({ description, title, github, stack, url, image, index }) => {\n  return (\n    <article className=\"project\">\n      {image && (\n        <Image fluid={image.childImageSharp.fluid} className=\"project-img\" />\n      )}\n      <div className=\"project-info\">\n        <span className=\"project-number\">0 {index + 1}.</span>\n        <h3>{title}</h3>\n        <p className=\"project-desc\">{description}</p>\n        <div className=\"project-stack\">\n          {stack.map(item => {\n            return <span key={item.id}>{item.title}</span>\n          })}\n        </div>\n        <div className=\"project-links\">\n          {github && (\n            <a href={github}>\n              <FaGithubSquare className=\"project-icon\" />\n            </a>\n          )}\n          <a href={url}>\n            <FaShareSquare className=\"project-icon\" />\n          </a>\n        </div>\n      </div>\n    </article>\n  )\n}\n\nProject.propTypes = {\n  title: PropTypes.string.isRequired,\n  github: PropTypes.string,\n  url: PropTypes.string,\n  description: PropTypes.string.isRequired,\n  image: PropTypes.object.isRequired,\n  stack: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default Project\n","import React from \"react\"\nimport Title from \"./Title\"\nimport Project from \"./Project\"\nimport { Link } from \"gatsby\"\n\nconst Projects = ({ projects, title, showLink }) => {\n  return (\n    <section className=\"section projects\">\n      <Title title={title} />\n      <div className=\"section-center projects-center\">\n        {projects.map((project, idx) => {\n          return <Project key={project.id} index={idx} {...project} />\n        })}\n      </div>\n      {showLink && (\n        <Link to=\"/projects\" className=\"btn center-btn\">\n          Projetos\n        </Link>\n      )}\n    </section>\n  )\n}\n\nexport default Projects\n","import React from \"react\"\nimport Image from \"gatsby-image\"\nimport { Link } from \"gatsby\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport SocialLinks from \"../constants/socialLinks\"\n\nconst query = graphql`\n  {\n    file(relativePath: { eq: \"hero-img.png\" }) {\n      childImageSharp {\n        fluid {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`\n\nconst Hero = () => {\n  const {\n    file: {\n      childImageSharp: { fluid },\n    },\n  } = useStaticQuery(query)\n  return (\n    <header className=\"hero\">\n      <div className=\"section-center hero-center\">\n        <article className=\"hero-info\">\n          <div className=\"underline\"></div>\n          <h1>Olá =)</h1>\n          <h4>sou Lucas, desenvolvedor web freelance</h4>\n          <Link to=\"/contact\" className=\"btn\">\n            Fale Comigo\n          </Link>\n          <SocialLinks />\n        </article>\n        <Image fluid={fluid} className=\"hero-img\" />\n      </div>\n    </header>\n  )\n}\n\nexport default Hero\n","import React from \"react\"\nimport { FaCode, FaSketch, FaAndroid } from \"react-icons/fa\"\nexport default [\n  {\n    id: 1,\n    icon: <FaCode className=\"service-icon\" />,\n    title: \"web development\",\n    text: `I'm baby meditation tofu chillwave, distillery messenger bag thundercats chicharrones kale chips gochujang. Banh mi direct trade marfa salvia.`,\n  },\n  {\n    id: 2,\n    icon: <FaSketch className=\"service-icon\" />,\n    title: \"web design\",\n    text: `I'm baby meditation tofu chillwave, distillery messenger bag thundercats chicharrones kale chips gochujang. Banh mi direct trade marfa salvia.`,\n  },\n  {\n    id: 3,\n    icon: <FaAndroid className=\"service-icon\" />,\n    title: \"app design\",\n    text: `I'm baby meditation tofu chillwave, distillery messenger bag thundercats chicharrones kale chips gochujang. Banh mi direct trade marfa salvia.`,\n  },\n]\n","import React from \"react\"\nimport Title from \"./Title\"\nimport services from \"../constants/services\"\nconst Services = () => {\n  return (\n    <section className=\"section bg-grey\">\n      <Title title=\"O que posso fazer\" />\n      <div className=\"section-center services-center\">\n        {services.map(service => {\n          const { id, icon, title, text } = service\n\n          return (\n            <article key={id} className=\"service\">\n              {icon}\n              <h4>{title}</h4>\n              <div className=\"underline\"></div>\n              <p>{text}</p>\n            </article>\n          )\n        })}\n      </div>\n    </section>\n  )\n}\n\nexport default Services\n","import React, { useState } from \"react\"\nimport Title from \"./Title\"\nimport { FaAngleDoubleRight } from \"react-icons/fa\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { Link } from \"gatsby\"\n\nconst query = graphql`\n  {\n    allStrapiJobs(sort: { fields: strapiId, order: DESC }) {\n      nodes {\n        strapiId\n        company\n        date\n        position\n        desc {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\nconst Jobs = () => {\n  const data = useStaticQuery(query)\n  const {\n    allStrapiJobs: { nodes: jobs },\n  } = data\n  const [value, setValue] = useState(0)\n\n  const { company, position, date, desc } = jobs[value]\n  return (\n    <section className=\"section jobs\">\n      <Title title=\"experiência\" />\n      <div className=\"jobs-center\">\n        {/** btn container */}\n        <div className=\"btn-container\">\n          {jobs.map((item, idx) => {\n            return (\n              <button\n                key={item.strapiId}\n                onClick={() => setValue(idx)}\n                className={`job-btn ${idx === value && \"active-btn\"}`}\n              >\n                {item.company}\n              </button>\n            )\n          })}\n        </div>\n\n        {/** job info */}\n        <article className=\"job-info\">\n          <h3>{position}</h3>\n          <h4>{company}</h4>\n          <p className=\"job-date\">{date}</p>\n          {desc.map(item => {\n            return (\n              <div key={item.id} className=\"job-desc\">\n                <FaAngleDoubleRight className=\"job-icon\" />\n                <p>{item.name}</p>\n              </div>\n            )\n          })}\n        </article>\n      </div>\n      <Link to=\"/about\" className=\"btn center-btn\">\n        Mais info\n      </Link>\n    </section>\n  )\n}\n\nexport default Jobs\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport Hero from \"../components/Hero\"\nimport Services from \"../components/Services\"\nimport Jobs from \"../components/Jobs\"\nimport Projects from \"../components/Projects\"\nimport Blogs from \"../components/Blogs\"\n\nexport default ({ data }) => {\n  const {\n    allStrapiProjects: { nodes: projects },\n    allStrapiBlogs: { nodes: blogs },\n  } = data\n  return (\n    <>\n      <Layout>\n        <Hero />\n        <Services />\n        <Jobs />\n        <Projects projects={projects} title=\"Projetos Recentes\" showLink />\n        <Blogs blogs={blogs} title=\"últimos artigos\" showLink />\n      </Layout>\n    </>\n  )\n}\n\nexport const query = graphql`\n  {\n    allStrapiProjects(filter: { featured: { eq: true } }) {\n      nodes {\n        github\n        id\n        description\n        title\n        url\n        image {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        stack {\n          id\n          title\n        }\n      }\n    }\n\n    allStrapiBlogs(sort: { fields: date, order: ASC }) {\n      nodes {\n        slug\n        content\n        desc\n        date(formatString: \"DD/MM/YYYY\")\n        id\n        title\n        category\n        image {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Image from \"gatsby-image\"\nimport { Link } from \"gatsby\"\nconst Blog = ({ id, title, image, date, category, slug, desc }) => {\n  return (\n    <Link to={`/blogs/${slug}`} key={id} className=\"blog\">\n      <article>\n        {image && (\n          <Image fluid={image.childImageSharp.fluid} className=\"blog-image\" />\n        )}\n        <div className=\"blog-card\">\n          <h4>{title}</h4>\n          <p>{desc}</p>\n          <div className=\"blog-footer\">\n            <p>{category}</p>\n            <p>{date}</p>\n          </div>\n        </div>\n      </article>\n    </Link>\n  )\n}\n\nBlog.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  desc: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  image: PropTypes.object.isRequired,\n}\n\nexport default Blog\n","import React from \"react\"\nimport Title from \"./Title\"\nimport Blog from \"./Blog\"\nimport { Link } from \"gatsby\"\nexport const Blogs = ({ blogs, title, showLink }) => {\n  return (\n    <section className=\"section\">\n      <Title title={title} />\n      <div className=\"section-center blogs-center\">\n        {blogs.map(blog => {\n          return <Blog key={blog.id} {...blog} />\n        })}\n      </div>\n      {showLink && (\n        <Link to=\"/blog\" className=\"btn center-btn\">\n          Blog\n        </Link>\n      )}\n    </section>\n  )\n}\nexport default Blogs\n"],"sourceRoot":""}